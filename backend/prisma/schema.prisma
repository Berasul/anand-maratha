// Auto-generated by mergeSchema.js
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model Access {
    id       Int @id @default(autoincrement())
    userId   Int
    moduleId Int

    user   User   @relation(fields: [userId], references: [id])
    module Module @relation(fields: [moduleId], references: [id])

    @@unique([userId, moduleId])
    @@index([userId])
    @@index([moduleId])
}

model LoginSession {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Module {
    id        Int      @id @default(autoincrement())
    name      String   @unique
    slug      String   @unique
    icon      String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    access Access[]
}

model UserGallery {
    id        Int      @id @default(autoincrement())
    userId    Int
    imageUrl  String
    isProfile Boolean  @default(false)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id])

    @@index([userId])
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  phone    String? @unique
  password String
  role     String  @default("user")
  status   String  @default("approved")
  isActive Boolean @default(true)

  gender        String
  dob           DateTime
  religion      String?
  caste         String?
  motherTongue  String?
  maritalStatus String

  city         String?
  state        String?
  country      String?
  profession   String?
  income       String?
  profileImage String?

  galleryImages UserGallery[]
  access        Access[]
   sessions  LoginSession[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}